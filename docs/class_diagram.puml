@startuml

!define CLASS {
  class DataType << (T,orchid) >> {
    {static} dict[str, list[tuple[str, int]]]
  }
  
  class RatingType << (T,orchid) >> {
    {static} dict[str, float]
  }
}

CLASS

abstract class DataReader {
  {abstract} + read(path: str): DataType
}

class TextDataReader {
  - key: str
  - students: DataType
  + read(path: str): DataType
}

class XMLDataReader {
  + read(path: str): DataType
}

class CalcRating {
  - data: DataType
  - rating: RatingType
  + calc(): RatingType
}

class FindPerfectStudent {
  - data: DataType
  + find(): str
}

DataReader <|-- TextDataReader
DataReader <|-- XMLDataReader

DataType --> DataReader
DataType --> CalcRating
DataType --> FindPerfectStudent
RatingType --> CalcRating

@enduml
